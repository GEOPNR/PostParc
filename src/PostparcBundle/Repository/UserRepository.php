<?php

namespace PostparcBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ServiceRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    public function search($filter, $user)
    {
        //TODO gÃ©rer les value vide
        $dql = $this->createQueryBuilder('u')
                ->select('u')
                ->leftJoin('u.entity', 'e');

        (array_key_exists('lastName', $filter) && $filter['lastName']) ? $dql->andwhere("u.lastName LIKE '%" . $filter['lastName'] . "%'") : '';
        (array_key_exists('username', $filter) && $filter['username']) ? $dql->andwhere("u.username LIKE '%" . $filter['username'] . "%'") : '';

        if (true === $user->hasRole('ROLE_ADMIN') || true === $user->hasRole('ROLE_SUPER_ADMIN')) {
            // pas de restrictions
        } elseif (true === $user->hasRole('ROLE_CONTRIBUTOR_PLUS')) {
            $dql->andwhere("(u.roles NOT LIKE '%ROLE_ADMIN%' and u.roles NOT LIKE '%ROLE_CONTRIBUTOR_PLUS%'  and u.roles NOT LIKE '%ROLE_SUPER_ADMIN%') OR u.id = " . $user->getId());
        } elseif (true === $user->hasRole('ROLE_CONTRIBUTOR')) {
            $dql->andwhere("(u.roles NOT LIKE '%ROLE_ADMIN%' and u.roles NOT LIKE '%ROLE_CONTRIBUTOR%' and u.roles NOT LIKE '%ROLE_SUPER_ADMIN%') OR u.id = " . $user->getId());
        } elseif (true === $user->hasRole('ROLE_USER')) {
            $dql->andwhere('u.id = ' . $user->getId());
        }

        if (!$user->hasRole('ROLE_SUPER_ADMIN') && !$user->hasRole('ROLE_ADMIN_MULTI_INSTANCE')) {
            $dql->andWhere('e.id=' . $user->getEntity()->getId());
        }

        return $query = $this->_em->createQuery($dql);
    }

    public function batchDelete($ids = null)
    {
        if ($ids) {
            $dql = $this->createQueryBuilder('pf')->delete('PostparcBundle\Entity\User u')->where('u.id IN (' . implode(',', $ids) . ')');

            return $query = $this->_em->createQuery($dql)->execute();
        }
    }

    public function autoComplete($q, $user, $page_limit = 30, $page = null)
    {
        $dql = $this->createQueryBuilder('u')->select('u')
            ->where('u.enabled=1')
            ->orderby('u.lastName, u.firstName', 'ASC')
        ;
        if ($q) {
            $dql->andWhere("u.email LIKE '%" . $q . "%' OR u.slug LIKE '%" . $q . "%' OR u.username LIKE '%" . $q . "%'");
        }
        if (!$user->hasRole('ROLE_SUPER_ADMIN') && !$user->hasRole('ROLE_ADMIN_MULTI_INSTANCE')) {
            $dql->leftJoin('u.entity', 'e');
            $dql->andWhere('e.id=' . $user->getEntity()->getId());
        }
        $query = $this->_em->createQuery($dql);
        $query->setMaxResults($page_limit);
        if ($page) {
            $query->setFirstResult(($page - 1) * $page_limit);
        }

        return $query->getResult();
    }
}
