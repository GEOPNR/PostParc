<?php

namespace PostparcBundle\Repository;

/**
 * EventAlertRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventAlertRepository extends \Doctrine\ORM\EntityRepository
{
    public function getEventAlertsQuery($eventId)
    {
        $dql = $this->createQueryBuilder('ea')
                ->leftJoin('ea.event', 'e')
                ->where('e.id=' . $eventId)
                ;

        return $query = $this->_em->createQuery($dql);
    }

    public function batchDelete($ids = null)
    {
        if ($ids) {
            $dql = $this->createQueryBuilder('ea')->delete('PostparcBundle\Entity\EventAlert ea')->where('ea.id IN (' . implode(',', $ids) . ') AND ea.isSended!=1');

            return $query = $this->_em->createQuery($dql)->execute();
        }
    }

    public function getSendableEventAlerts($date)
    {
        $dql = $this->createQueryBuilder('ea')
                ->where('ea.isSended=0')
                ->andWhere('ea.effectiveDate<=\'' . $date->format('Y-m-d H:i:s') . '\'')
                ->andWhere('ea.isManualAlert!=1')
                ;
        $query = $this->_em->createQuery($dql);

        return $query->getResult();
    }

    public function getEventAlertsHaveToBeprintOnInterfaceForUser($userId)
    {
        $now = new \Datetime();
        $dql = $this->createQueryBuilder('ea')
                ->leftJoin('ea.event', 'e')
                ->leftJoin('e.organizators', 'u')
                ->where('u.id=' . $userId)
                ->andWhere('ea.isPrintOnInterface=1')
                ->andWhere('ea.isShowInInterfaceByOrganizator=0')
                ->andWhere('ea.recipients!=2')
                ->andWhere('ea.effectiveDate<=\'' . $now->format('Y-m-d H:i:s') . '\'')
                ->andWhere('ea.isManualAlert!=1')
                ;
        $query = $this->_em->createQuery($dql);

        return $query->getResult();
    }

    public function getFuturUserEventAlerts($currentUser)
    {
        $now = new \Datetime();
        $dql = $this->createQueryBuilder('ea')
                ->leftJoin('ea.event', 'e')
                ->leftJoin('e.organizators', 'u')
                ->where('u.id=' . $currentUser->getId())
                ->andWhere('ea.isPrintOnInterface=1')
                ->andWhere('ea.isShowInInterfaceByOrganizator=1')
                ->andWhere('ea.recipients!=2')
                ->andWhere('ea.effectiveDate>=\'' . $now->format('Y-m-d') . '\'')
                ->orderBy('ea.effectiveDate', 'ASC')
                ;
        $query = $this->_em->createQuery($dql);

        return $query->getResult();
    }
}
